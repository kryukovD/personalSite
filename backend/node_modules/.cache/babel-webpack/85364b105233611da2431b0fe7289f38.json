{"ast":null,"code":"import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\n\nfunction getNavigator() {\n  return typeof window !== 'undefined' ? window.navigator : undefined;\n}\n\nfunction isChildOfPicture(element) {\n  return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\n\nfunction isImageElement(element) {\n  return element.nodeName.toLowerCase() === 'img';\n}\n\nfunction setImage(element, imagePath, useSrcset) {\n  if (isImageElement(element)) {\n    if (useSrcset && 'srcset' in element) {\n      element.srcset = imagePath;\n    } else {\n      element.src = imagePath;\n    }\n  } else {\n    element.style.backgroundImage = `url('${imagePath}')`;\n  }\n\n  return element;\n}\n\nfunction setSources(attrName) {\n  return image => {\n    const sources = image.parentElement.getElementsByTagName('source');\n\n    for (let i = 0; i < sources.length; i++) {\n      const attrValue = sources[i].getAttribute(attrName);\n\n      if (attrValue) {\n        // Check if `srcset` is supported by the current browser\n        if ('srcset' in sources[i]) {\n          sources[i].srcset = attrValue;\n        } else {\n          sources[i].src = attrValue;\n        }\n      }\n    }\n  };\n}\n\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\n\nfunction setImageAndSources(setSourcesFn) {\n  return (element, imagePath, useSrcset) => {\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      setSourcesFn(element);\n    }\n\n    if (imagePath) {\n      setImage(element, imagePath, useSrcset);\n    }\n  };\n}\n\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nclass Hooks {\n  constructor() {\n    this.navigator = getNavigator();\n  }\n\n  setPlatformId(platformId) {\n    this.platformId = platformId;\n  }\n\n  onDestroy(attributes) {}\n\n  onAttributeChange(newAttributes) {}\n\n}\n\nconst cssClassNames = {\n  loaded: 'ng-lazyloaded',\n  loading: 'ng-lazyloading',\n  failed: 'ng-failed-lazyloaded'\n};\n\nfunction removeCssClassName(element, cssClassName) {\n  element.className = element.className.replace(cssClassName, '');\n}\n\nfunction addCssClassName(element, cssClassName) {\n  if (!element.className.includes(cssClassName)) {\n    element.className += ` ${cssClassName}`;\n  }\n}\n\nfunction hasCssClassName(element, cssClassName) {\n  return element.className && element.className.includes(cssClassName);\n}\n\nclass SharedHooks extends Hooks {\n  setup(attributes) {\n    setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n\n    if (attributes.imagePath) {\n      addCssClassName(attributes.element, cssClassNames.loading);\n    }\n\n    if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n      removeCssClassName(attributes.element, cssClassNames.loaded);\n    }\n  }\n\n  finally(attributes) {\n    addCssClassName(attributes.element, cssClassNames.loaded);\n    removeCssClassName(attributes.element, cssClassNames.loading);\n  }\n\n  loadImage(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      // Set the image right away for bots for better SEO\n      return [attributes.imagePath];\n    }\n\n    const {\n      element,\n      useSrcset,\n      imagePath,\n      decode\n    } = attributes;\n    let img;\n\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      const parentClone = element.parentNode.cloneNode(true);\n      img = parentClone.getElementsByTagName('img')[0];\n      setSourcesToLazy(img);\n      setImage(img, imagePath, useSrcset);\n    } else {\n      img = new Image();\n\n      if (isImageElement(element) && element.referrerPolicy) {\n        img.referrerPolicy = element.referrerPolicy;\n      }\n\n      if (isImageElement(element) && element.sizes) {\n        img.sizes = element.sizes;\n      }\n\n      if (useSrcset && 'srcset' in img) {\n        img.srcset = imagePath;\n      } else {\n        img.src = imagePath;\n      }\n    }\n\n    if (decode && img.decode) {\n      return img.decode().then(() => imagePath);\n    }\n\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(imagePath);\n\n      img.onerror = () => reject(null);\n    });\n  }\n\n  setErrorImage(error, attributes) {\n    const {\n      element,\n      useSrcset,\n      errorImagePath\n    } = attributes;\n    setImageAndSourcesToError(element, errorImagePath, useSrcset);\n    addCssClassName(element, cssClassNames.failed);\n  }\n\n  setLoadedImage(imagePath, attributes) {\n    const {\n      element,\n      useSrcset\n    } = attributes;\n    setImageAndSourcesToLazy(element, imagePath, useSrcset);\n  }\n\n  isDisabled() {\n    // Disable if SSR and the user isn't a bot\n    return isPlatformServer(this.platformId) && !this.isBot();\n  }\n\n  skipLazyLoading(attributes) {\n    return this.isBot(attributes);\n  }\n\n  isBot(attributes) {\n    var _a;\n\n    if ((_a = this.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) {\n      return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(this.navigator.userAgent);\n    }\n\n    return false;\n  }\n\n}\n\nclass IntersectionObserverHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n    this.observers = new WeakMap();\n    this.intersectionSubject = new Subject();\n    this.uniqKey = {};\n  }\n\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of({\n        isIntersecting: true\n      });\n    }\n\n    if (attributes.customObservable) {\n      return attributes.customObservable;\n    }\n\n    const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n    const options = {\n      root: attributes.scrollContainer || null\n    };\n\n    if (attributes.offset) {\n      options.rootMargin = `${attributes.offset}px`;\n    }\n\n    let observer = this.observers.get(scrollContainerKey);\n\n    if (!observer) {\n      observer = new IntersectionObserver(entrys => this.loadingCallback(entrys), options);\n      this.observers.set(scrollContainerKey, observer);\n    }\n\n    observer.observe(attributes.element);\n    return Observable.create(obs => {\n      const subscription = this.intersectionSubject.pipe(filter(entry => entry.target === attributes.element)).subscribe(obs);\n      return () => {\n        subscription.unsubscribe();\n        observer.unobserve(attributes.element);\n      };\n    });\n  }\n\n  isVisible(event) {\n    return event.isIntersecting;\n  }\n\n  loadingCallback(entrys) {\n    entrys.forEach(entry => this.intersectionSubject.next(entry));\n  }\n\n}\n\nfunction lazyLoadImage(hooks, attributes) {\n  return evntObservable => {\n    return evntObservable.pipe(tap(data => attributes.onStateChange.emit({\n      reason: 'observer-emit',\n      data\n    })), filter(event => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({\n      reason: 'start-loading'\n    })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'mount-image'\n    })), tap(imagePath => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'loading-succeeded'\n    })), map(() => true), catchError(error => {\n      attributes.onStateChange.emit({\n        reason: 'loading-failed',\n        data: error\n      });\n      hooks.setErrorImage(error, attributes);\n      return of(false);\n    }), tap(() => {\n      attributes.onStateChange.emit({\n        reason: 'finally'\n      });\n      hooks.finally(attributes);\n    }));\n  };\n}\n\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\n\nclass LazyLoadImageDirective {\n  constructor(el, ngZone, platformId, hooks) {\n    this.onStateChange = new EventEmitter(); // Emits an event on every state change\n\n    this.elementRef = el;\n    this.ngZone = ngZone;\n    this.propertyChanges$ = new ReplaySubject();\n    this.hooks = hooks;\n    this.hooks.setPlatformId(platformId);\n    this.uid = Math.random().toString(36).substr(2, 9);\n  }\n\n  ngOnChanges() {\n    if (this.debug === true && !this.debugSubscription) {\n      this.debugSubscription = this.onStateChange.subscribe(e => console.log(e));\n    }\n\n    this.propertyChanges$.next({\n      element: this.elementRef.nativeElement,\n      imagePath: this.lazyImage,\n      defaultImagePath: this.defaultImage,\n      errorImagePath: this.errorImage,\n      useSrcset: this.useSrcset,\n      offset: this.offset ? this.offset | 0 : 0,\n      scrollContainer: this.scrollTarget,\n      customObservable: this.customObservable,\n      decode: this.decode,\n      onStateChange: this.onStateChange,\n      id: this.uid\n    });\n  }\n\n  ngAfterContentInit() {\n    if (this.hooks.isDisabled()) {\n      return null;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.loadSubscription = this.propertyChanges$.pipe(tap(attributes => this.hooks.onAttributeChange(attributes)), tap(attributes => attributes.onStateChange.emit({\n        reason: 'setup'\n      })), tap(attributes => this.hooks.setup(attributes)), switchMap(attributes => {\n        if (!attributes.imagePath) {\n          return never();\n        }\n\n        return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n      })).subscribe({\n        next: () => null\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    var _a, _b;\n\n    this.propertyChanges$.pipe(take(1)).subscribe({\n      next: attributes => this.hooks.onDestroy(attributes)\n    }).unsubscribe();\n    (_a = this.loadSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    (_b = this.debugSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n  }\n\n}\n\nLazyLoadImageDirective.ɵfac = function LazyLoadImageDirective_Factory(t) {\n  return new (t || LazyLoadImageDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(LAZYLOAD_IMAGE_HOOKS));\n};\n\nLazyLoadImageDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LazyLoadImageDirective,\n  selectors: [[\"\", \"lazyLoad\", \"\"]],\n  inputs: {\n    lazyImage: [\"lazyLoad\", \"lazyImage\"],\n    defaultImage: \"defaultImage\",\n    errorImage: \"errorImage\",\n    scrollTarget: \"scrollTarget\",\n    customObservable: \"customObservable\",\n    offset: \"offset\",\n    useSrcset: \"useSrcset\",\n    decode: \"decode\",\n    debug: \"debug\"\n  },\n  outputs: {\n    onStateChange: \"onStateChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lazyLoad]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Hooks,\n      decorators: [{\n        type: Inject,\n        args: [LAZYLOAD_IMAGE_HOOKS]\n      }]\n    }];\n  }, {\n    lazyImage: [{\n      type: Input,\n      args: ['lazyLoad']\n    }],\n    defaultImage: [{\n      type: Input\n    }],\n    errorImage: [{\n      type: Input\n    }],\n    scrollTarget: [{\n      type: Input\n    }],\n    customObservable: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    useSrcset: [{\n      type: Input\n    }],\n    decode: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    onStateChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass LazyLoadImageModule {}\n\nLazyLoadImageModule.ɵfac = function LazyLoadImageModule_Factory(t) {\n  return new (t || LazyLoadImageModule)();\n};\n\nLazyLoadImageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LazyLoadImageModule\n});\nLazyLoadImageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: LAZYLOAD_IMAGE_HOOKS,\n    useClass: IntersectionObserverHooks\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LazyLoadImageDirective],\n      exports: [LazyLoadImageDirective],\n      providers: [{\n        provide: LAZYLOAD_IMAGE_HOOKS,\n        useClass: IntersectionObserverHooks\n      }]\n    }]\n  }], null, null);\n})();\n\nclass Rect {\n  constructor(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  static fromElement(element) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = element.getBoundingClientRect();\n\n    if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n      return Rect.empty;\n    } else {\n      return new Rect(left, top, right, bottom);\n    }\n  }\n\n  static fromWindow(_window) {\n    return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n  }\n\n  inflate(inflateBy) {\n    this.left -= inflateBy;\n    this.top -= inflateBy;\n    this.right += inflateBy;\n    this.bottom += inflateBy;\n  }\n\n  intersectsWith(rect) {\n    return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n  }\n\n  getIntersectionWith(rect) {\n    const left = Math.max(this.left, rect.left);\n    const top = Math.max(this.top, rect.top);\n    const right = Math.min(this.right, rect.right);\n    const bottom = Math.min(this.bottom, rect.bottom);\n\n    if (right >= left && bottom >= top) {\n      return new Rect(left, top, right, bottom);\n    } else {\n      return Rect.empty;\n    }\n  }\n\n}\n\nRect.empty = new Rect(0, 0, 0, 0);\n\nclass ScrollHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n\n    this.getWindow = () => window;\n\n    this.scrollListeners = new WeakMap(); // Only create one scroll listener per target and share the observable.\n    // Typical, there will only be one observable per application\n\n    this.getScrollListener = scrollTarget => {\n      if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n        console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n        return empty();\n      }\n\n      const scrollListener = this.scrollListeners.get(scrollTarget);\n\n      if (scrollListener) {\n        return scrollListener;\n      }\n\n      const srollEvent = Observable.create(observer => {\n        const eventName = 'scroll';\n\n        const handler = event => observer.next(event);\n\n        const options = {\n          passive: true,\n          capture: false\n        };\n        scrollTarget.addEventListener(eventName, handler, options);\n        return () => scrollTarget.removeEventListener(eventName, handler, options);\n      });\n      const listener = this.sampleObservable(srollEvent);\n      this.scrollListeners.set(scrollTarget, listener);\n      return listener;\n    };\n  }\n\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of('load');\n    } else if (attributes.customObservable) {\n      return attributes.customObservable.pipe(startWith(''));\n    } else if (attributes.scrollContainer) {\n      return this.getScrollListener(attributes.scrollContainer);\n    }\n\n    return this.getScrollListener(this.getWindow());\n  }\n\n  isVisible(event, attributes) {\n    const elementBounds = Rect.fromElement(attributes.element);\n\n    if (elementBounds === Rect.empty) {\n      return false;\n    }\n\n    const windowBounds = Rect.fromWindow(this.getWindow());\n    elementBounds.inflate(attributes.offset);\n\n    if (attributes.scrollContainer) {\n      const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n      const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n      return elementBounds.intersectsWith(intersection);\n    } else {\n      return elementBounds.intersectsWith(windowBounds);\n    }\n  }\n\n  sampleObservable(obs, scheduler) {\n    return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n  }\n\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };","map":{"version":3,"sources":["C:/mySite/node_modules/ng-lazyload-image/fesm2015/ng-lazyload-image.mjs"],"names":["Subject","of","Observable","ReplaySubject","never","empty","filter","tap","take","mergeMap","map","catchError","switchMap","startWith","sampleTime","share","isPlatformServer","i0","InjectionToken","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","NgModule","getNavigator","window","navigator","undefined","isChildOfPicture","element","Boolean","parentElement","nodeName","toLowerCase","isImageElement","setImage","imagePath","useSrcset","srcset","src","style","backgroundImage","setSources","attrName","image","sources","getElementsByTagName","i","length","attrValue","getAttribute","setSourcesToDefault","setSourcesToLazy","setSourcesToError","setImageAndSources","setSourcesFn","setImageAndSourcesToDefault","setImageAndSourcesToLazy","setImageAndSourcesToError","Hooks","constructor","setPlatformId","platformId","onDestroy","attributes","onAttributeChange","newAttributes","cssClassNames","loaded","loading","failed","removeCssClassName","cssClassName","className","replace","addCssClassName","includes","hasCssClassName","SharedHooks","setup","defaultImagePath","finally","loadImage","skipLazyLoading","decode","img","parentClone","parentNode","cloneNode","Image","referrerPolicy","sizes","then","Promise","resolve","reject","onload","onerror","setErrorImage","error","errorImagePath","setLoadedImage","isDisabled","isBot","_a","userAgent","test","IntersectionObserverHooks","arguments","observers","WeakMap","intersectionSubject","uniqKey","getObservable","isIntersecting","customObservable","scrollContainerKey","scrollContainer","options","root","offset","rootMargin","observer","get","IntersectionObserver","entrys","loadingCallback","set","observe","create","obs","subscription","pipe","entry","target","subscribe","unsubscribe","unobserve","isVisible","event","forEach","next","lazyLoadImage","hooks","evntObservable","data","onStateChange","emit","reason","LAZYLOAD_IMAGE_HOOKS","LazyLoadImageDirective","el","ngZone","elementRef","propertyChanges$","uid","Math","random","toString","substr","ngOnChanges","debug","debugSubscription","e","console","log","nativeElement","lazyImage","defaultImage","errorImage","scrollTarget","id","ngAfterContentInit","runOutsideAngular","loadSubscription","ngOnDestroy","_b","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","Object","decorators","LazyLoadImageModule","ɵmod","ɵinj","provide","useClass","declarations","exports","providers","Rect","left","top","right","bottom","fromElement","getBoundingClientRect","fromWindow","_window","innerWidth","innerHeight","inflate","inflateBy","intersectsWith","rect","getIntersectionWith","max","min","ScrollHooks","getWindow","scrollListeners","getScrollListener","addEventListener","warn","scrollListener","srollEvent","eventName","handler","passive","capture","removeEventListener","listener","sampleObservable","elementBounds","windowBounds","scrollContainerBounds","intersection","scheduler"],"mappings":"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","sourcesContent":["import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\n\nfunction getNavigator() {\n    return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n    return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n    if (isImageElement(element)) {\n        if (useSrcset && 'srcset' in element) {\n            element.srcset = imagePath;\n        }\n        else {\n            element.src = imagePath;\n        }\n    }\n    else {\n        element.style.backgroundImage = `url('${imagePath}')`;\n    }\n    return element;\n}\nfunction setSources(attrName) {\n    return (image) => {\n        const sources = image.parentElement.getElementsByTagName('source');\n        for (let i = 0; i < sources.length; i++) {\n            const attrValue = sources[i].getAttribute(attrName);\n            if (attrValue) {\n                // Check if `srcset` is supported by the current browser\n                if ('srcset' in sources[i]) {\n                    sources[i].srcset = attrValue;\n                }\n                else {\n                    sources[i].src = attrValue;\n                }\n            }\n        }\n    };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n    return (element, imagePath, useSrcset) => {\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            setSourcesFn(element);\n        }\n        if (imagePath) {\n            setImage(element, imagePath, useSrcset);\n        }\n    };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nclass Hooks {\n    constructor() {\n        this.navigator = getNavigator();\n    }\n    setPlatformId(platformId) {\n        this.platformId = platformId;\n    }\n    onDestroy(attributes) { }\n    onAttributeChange(newAttributes) { }\n}\n\nconst cssClassNames = {\n    loaded: 'ng-lazyloaded',\n    loading: 'ng-lazyloading',\n    failed: 'ng-failed-lazyloaded',\n};\nfunction removeCssClassName(element, cssClassName) {\n    element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n    if (!element.className.includes(cssClassName)) {\n        element.className += ` ${cssClassName}`;\n    }\n}\nfunction hasCssClassName(element, cssClassName) {\n    return element.className && element.className.includes(cssClassName);\n}\n\nclass SharedHooks extends Hooks {\n    setup(attributes) {\n        setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n        if (attributes.imagePath) {\n            addCssClassName(attributes.element, cssClassNames.loading);\n        }\n        if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n            removeCssClassName(attributes.element, cssClassNames.loaded);\n        }\n    }\n    finally(attributes) {\n        addCssClassName(attributes.element, cssClassNames.loaded);\n        removeCssClassName(attributes.element, cssClassNames.loading);\n    }\n    loadImage(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            // Set the image right away for bots for better SEO\n            return [attributes.imagePath];\n        }\n        const { element, useSrcset, imagePath, decode } = attributes;\n        let img;\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            const parentClone = element.parentNode.cloneNode(true);\n            img = parentClone.getElementsByTagName('img')[0];\n            setSourcesToLazy(img);\n            setImage(img, imagePath, useSrcset);\n        }\n        else {\n            img = new Image();\n            if (isImageElement(element) && element.referrerPolicy) {\n                img.referrerPolicy = element.referrerPolicy;\n            }\n            if (isImageElement(element) && element.sizes) {\n                img.sizes = element.sizes;\n            }\n            if (useSrcset && 'srcset' in img) {\n                img.srcset = imagePath;\n            }\n            else {\n                img.src = imagePath;\n            }\n        }\n        if (decode && img.decode) {\n            return img.decode().then(() => imagePath);\n        }\n        return new Promise((resolve, reject) => {\n            img.onload = () => resolve(imagePath);\n            img.onerror = () => reject(null);\n        });\n    }\n    setErrorImage(error, attributes) {\n        const { element, useSrcset, errorImagePath } = attributes;\n        setImageAndSourcesToError(element, errorImagePath, useSrcset);\n        addCssClassName(element, cssClassNames.failed);\n    }\n    setLoadedImage(imagePath, attributes) {\n        const { element, useSrcset } = attributes;\n        setImageAndSourcesToLazy(element, imagePath, useSrcset);\n    }\n    isDisabled() {\n        // Disable if SSR and the user isn't a bot\n        return isPlatformServer(this.platformId) && !this.isBot();\n    }\n    skipLazyLoading(attributes) {\n        return this.isBot(attributes);\n    }\n    isBot(attributes) {\n        var _a;\n        if ((_a = this.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) {\n            return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(this.navigator.userAgent);\n        }\n        return false;\n    }\n}\n\nclass IntersectionObserverHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.observers = new WeakMap();\n        this.intersectionSubject = new Subject();\n        this.uniqKey = {};\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of({ isIntersecting: true });\n        }\n        if (attributes.customObservable) {\n            return attributes.customObservable;\n        }\n        const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n        const options = {\n            root: attributes.scrollContainer || null,\n        };\n        if (attributes.offset) {\n            options.rootMargin = `${attributes.offset}px`;\n        }\n        let observer = this.observers.get(scrollContainerKey);\n        if (!observer) {\n            observer = new IntersectionObserver((entrys) => this.loadingCallback(entrys), options);\n            this.observers.set(scrollContainerKey, observer);\n        }\n        observer.observe(attributes.element);\n        return Observable.create((obs) => {\n            const subscription = this.intersectionSubject.pipe(filter((entry) => entry.target === attributes.element)).subscribe(obs);\n            return () => {\n                subscription.unsubscribe();\n                observer.unobserve(attributes.element);\n            };\n        });\n    }\n    isVisible(event) {\n        return event.isIntersecting;\n    }\n    loadingCallback(entrys) {\n        entrys.forEach((entry) => this.intersectionSubject.next(entry));\n    }\n}\n\nfunction lazyLoadImage(hooks, attributes) {\n    return (evntObservable) => {\n        return evntObservable.pipe(tap((data) => attributes.onStateChange.emit({ reason: 'observer-emit', data })), filter((event) => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({ reason: 'start-loading' })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({ reason: 'mount-image' })), tap((imagePath) => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({ reason: 'loading-succeeded' })), map(() => true), catchError((error) => {\n            attributes.onStateChange.emit({ reason: 'loading-failed', data: error });\n            hooks.setErrorImage(error, attributes);\n            return of(false);\n        }), tap(() => {\n            attributes.onStateChange.emit({ reason: 'finally' });\n            hooks.finally(attributes);\n        }));\n    };\n}\n\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\n\nclass LazyLoadImageDirective {\n    constructor(el, ngZone, platformId, hooks) {\n        this.onStateChange = new EventEmitter(); // Emits an event on every state change\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new ReplaySubject();\n        this.hooks = hooks;\n        this.hooks.setPlatformId(platformId);\n        this.uid = Math.random().toString(36).substr(2, 9);\n    }\n    ngOnChanges() {\n        if (this.debug === true && !this.debugSubscription) {\n            this.debugSubscription = this.onStateChange.subscribe((e) => console.log(e));\n        }\n        this.propertyChanges$.next({\n            element: this.elementRef.nativeElement,\n            imagePath: this.lazyImage,\n            defaultImagePath: this.defaultImage,\n            errorImagePath: this.errorImage,\n            useSrcset: this.useSrcset,\n            offset: this.offset ? this.offset | 0 : 0,\n            scrollContainer: this.scrollTarget,\n            customObservable: this.customObservable,\n            decode: this.decode,\n            onStateChange: this.onStateChange,\n            id: this.uid,\n        });\n    }\n    ngAfterContentInit() {\n        if (this.hooks.isDisabled()) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.loadSubscription = this.propertyChanges$\n                .pipe(tap((attributes) => this.hooks.onAttributeChange(attributes)), tap((attributes) => attributes.onStateChange.emit({ reason: 'setup' })), tap((attributes) => this.hooks.setup(attributes)), switchMap((attributes) => {\n                if (!attributes.imagePath) {\n                    return never();\n                }\n                return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n            }))\n                .subscribe({\n                next: () => null,\n            });\n        });\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        this.propertyChanges$\n            .pipe(take(1))\n            .subscribe({ next: (attributes) => this.hooks.onDestroy(attributes) })\n            .unsubscribe();\n        (_a = this.loadSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        (_b = this.debugSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n    }\n}\nLazyLoadImageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: LAZYLOAD_IMAGE_HOOKS }], target: i0.ɵɵFactoryTarget.Directive });\nLazyLoadImageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: LazyLoadImageDirective, selector: \"[lazyLoad]\", inputs: { lazyImage: [\"lazyLoad\", \"lazyImage\"], defaultImage: \"defaultImage\", errorImage: \"errorImage\", scrollTarget: \"scrollTarget\", customObservable: \"customObservable\", offset: \"offset\", useSrcset: \"useSrcset\", decode: \"decode\", debug: \"debug\" }, outputs: { onStateChange: \"onStateChange\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[lazyLoad]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: Hooks, decorators: [{\n                        type: Inject,\n                        args: [LAZYLOAD_IMAGE_HOOKS]\n                    }] }];\n    }, propDecorators: { lazyImage: [{\n                type: Input,\n                args: ['lazyLoad']\n            }], defaultImage: [{\n                type: Input\n            }], errorImage: [{\n                type: Input\n            }], scrollTarget: [{\n                type: Input\n            }], customObservable: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], useSrcset: [{\n                type: Input\n            }], decode: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], onStateChange: [{\n                type: Output\n            }] } });\n\nclass LazyLoadImageModule {\n}\nLazyLoadImageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLazyLoadImageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, declarations: [LazyLoadImageDirective], exports: [LazyLoadImageDirective] });\nLazyLoadImageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LazyLoadImageDirective],\n                    exports: [LazyLoadImageDirective],\n                    providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }],\n                }]\n        }] });\n\nclass Rect {\n    constructor(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    static fromElement(element) {\n        const { left, top, right, bottom } = element.getBoundingClientRect();\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n            return Rect.empty;\n        }\n        else {\n            return new Rect(left, top, right, bottom);\n        }\n    }\n    static fromWindow(_window) {\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n    inflate(inflateBy) {\n        this.left -= inflateBy;\n        this.top -= inflateBy;\n        this.right += inflateBy;\n        this.bottom += inflateBy;\n    }\n    intersectsWith(rect) {\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n    getIntersectionWith(rect) {\n        const left = Math.max(this.left, rect.left);\n        const top = Math.max(this.top, rect.top);\n        const right = Math.min(this.right, rect.right);\n        const bottom = Math.min(this.bottom, rect.bottom);\n        if (right >= left && bottom >= top) {\n            return new Rect(left, top, right, bottom);\n        }\n        else {\n            return Rect.empty;\n        }\n    }\n}\nRect.empty = new Rect(0, 0, 0, 0);\n\nclass ScrollHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.getWindow = () => window;\n        this.scrollListeners = new WeakMap();\n        // Only create one scroll listener per target and share the observable.\n        // Typical, there will only be one observable per application\n        this.getScrollListener = (scrollTarget) => {\n            if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n                console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n                return empty();\n            }\n            const scrollListener = this.scrollListeners.get(scrollTarget);\n            if (scrollListener) {\n                return scrollListener;\n            }\n            const srollEvent = Observable.create((observer) => {\n                const eventName = 'scroll';\n                const handler = (event) => observer.next(event);\n                const options = { passive: true, capture: false };\n                scrollTarget.addEventListener(eventName, handler, options);\n                return () => scrollTarget.removeEventListener(eventName, handler, options);\n            });\n            const listener = this.sampleObservable(srollEvent);\n            this.scrollListeners.set(scrollTarget, listener);\n            return listener;\n        };\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of('load');\n        }\n        else if (attributes.customObservable) {\n            return attributes.customObservable.pipe(startWith(''));\n        }\n        else if (attributes.scrollContainer) {\n            return this.getScrollListener(attributes.scrollContainer);\n        }\n        return this.getScrollListener(this.getWindow());\n    }\n    isVisible(event, attributes) {\n        const elementBounds = Rect.fromElement(attributes.element);\n        if (elementBounds === Rect.empty) {\n            return false;\n        }\n        const windowBounds = Rect.fromWindow(this.getWindow());\n        elementBounds.inflate(attributes.offset);\n        if (attributes.scrollContainer) {\n            const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n            const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n            return elementBounds.intersectsWith(intersection);\n        }\n        else {\n            return elementBounds.intersectsWith(windowBounds);\n        }\n    }\n    sampleObservable(obs, scheduler) {\n        return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };\n"]},"metadata":{},"sourceType":"module"}